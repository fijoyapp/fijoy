// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file fijoy/v1/delta.proto (package fijoy.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message fijoy.v1.Delta
 */
export class Delta extends Message<Delta> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string profile_id = 2;
   */
  profileId = "";

  /**
   * @generated from field: google.protobuf.Timestamp datetime = 3;
   */
  datetime?: Timestamp;

  /**
   * @generated from field: string liquidity = 4;
   */
  liquidity = "";

  /**
   * @generated from field: string investment = 5;
   */
  investment = "";

  /**
   * @generated from field: string property = 6;
   */
  property = "";

  /**
   * @generated from field: string receivable = 7;
   */
  receivable = "";

  /**
   * @generated from field: string liability = 8;
   */
  liability = "";

  constructor(data?: PartialMessage<Delta>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.Delta";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "datetime", kind: "message", T: Timestamp },
    { no: 4, name: "liquidity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "investment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "property", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "receivable", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "liability", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Delta {
    return new Delta().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Delta {
    return new Delta().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Delta {
    return new Delta().fromJsonString(jsonString, options);
  }

  static equals(a: Delta | PlainMessage<Delta> | undefined, b: Delta | PlainMessage<Delta> | undefined): boolean {
    return proto3.util.equals(Delta, a, b);
  }
}

/**
 * @generated from message fijoy.v1.Deltas
 */
export class Deltas extends Message<Deltas> {
  /**
   * @generated from field: repeated fijoy.v1.Delta Deltas = 1;
   */
  Deltas: Delta[] = [];

  constructor(data?: PartialMessage<Deltas>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.Deltas";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Deltas", kind: "message", T: Delta, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Deltas {
    return new Deltas().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Deltas {
    return new Deltas().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Deltas {
    return new Deltas().fromJsonString(jsonString, options);
  }

  static equals(a: Deltas | PlainMessage<Deltas> | undefined, b: Deltas | PlainMessage<Deltas> | undefined): boolean {
    return proto3.util.equals(Deltas, a, b);
  }
}

/**
 * @generated from message fijoy.v1.GetDeltasRequest
 */
export class GetDeltasRequest extends Message<GetDeltasRequest> {
  /**
   * @generated from field: google.protobuf.Timestamp from_date = 1;
   */
  fromDate?: Timestamp;

  /**
   * inclusive
   *
   * @generated from field: google.protobuf.Timestamp to_date = 2;
   */
  toDate?: Timestamp;

  constructor(data?: PartialMessage<GetDeltasRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.GetDeltasRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "from_date", kind: "message", T: Timestamp },
    { no: 2, name: "to_date", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDeltasRequest {
    return new GetDeltasRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDeltasRequest {
    return new GetDeltasRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDeltasRequest {
    return new GetDeltasRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDeltasRequest | PlainMessage<GetDeltasRequest> | undefined, b: GetDeltasRequest | PlainMessage<GetDeltasRequest> | undefined): boolean {
    return proto3.util.equals(GetDeltasRequest, a, b);
  }
}

