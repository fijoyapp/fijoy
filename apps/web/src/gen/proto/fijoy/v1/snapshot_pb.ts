// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file fijoy/v1/snapshot.proto (package fijoy.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message fijoy.v1.OverallSnapshot
 */
export class OverallSnapshot extends Message<OverallSnapshot> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string profile_id = 2;
   */
  profileId = "";

  /**
   * @generated from field: google.protobuf.Timestamp datehour = 3;
   */
  datehour?: Timestamp;

  /**
   * @generated from field: string liquidity = 4;
   */
  liquidity = "";

  /**
   * @generated from field: string investment = 5;
   */
  investment = "";

  /**
   * @generated from field: string property = 6;
   */
  property = "";

  /**
   * @generated from field: string receivable = 7;
   */
  receivable = "";

  /**
   * @generated from field: string liability = 8;
   */
  liability = "";

  constructor(data?: PartialMessage<OverallSnapshot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.OverallSnapshot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "datehour", kind: "message", T: Timestamp },
    { no: 4, name: "liquidity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "investment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "property", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "receivable", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "liability", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OverallSnapshot {
    return new OverallSnapshot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OverallSnapshot {
    return new OverallSnapshot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OverallSnapshot {
    return new OverallSnapshot().fromJsonString(jsonString, options);
  }

  static equals(a: OverallSnapshot | PlainMessage<OverallSnapshot> | undefined, b: OverallSnapshot | PlainMessage<OverallSnapshot> | undefined): boolean {
    return proto3.util.equals(OverallSnapshot, a, b);
  }
}

/**
 * @generated from message fijoy.v1.OverallSnapshotList
 */
export class OverallSnapshotList extends Message<OverallSnapshotList> {
  /**
   * @generated from field: repeated fijoy.v1.OverallSnapshot items = 1;
   */
  items: OverallSnapshot[] = [];

  constructor(data?: PartialMessage<OverallSnapshotList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.OverallSnapshotList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "items", kind: "message", T: OverallSnapshot, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OverallSnapshotList {
    return new OverallSnapshotList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OverallSnapshotList {
    return new OverallSnapshotList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OverallSnapshotList {
    return new OverallSnapshotList().fromJsonString(jsonString, options);
  }

  static equals(a: OverallSnapshotList | PlainMessage<OverallSnapshotList> | undefined, b: OverallSnapshotList | PlainMessage<OverallSnapshotList> | undefined): boolean {
    return proto3.util.equals(OverallSnapshotList, a, b);
  }
}

/**
 * @generated from message fijoy.v1.GetOverallSnapshotsRequest
 */
export class GetOverallSnapshotsRequest extends Message<GetOverallSnapshotsRequest> {
  /**
   * @generated from field: google.protobuf.Timestamp from_datehour = 1;
   */
  fromDatehour?: Timestamp;

  /**
   * inclusive
   *
   * @generated from field: google.protobuf.Timestamp to_datehour = 2;
   */
  toDatehour?: Timestamp;

  constructor(data?: PartialMessage<GetOverallSnapshotsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.GetOverallSnapshotsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "from_datehour", kind: "message", T: Timestamp },
    { no: 2, name: "to_datehour", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOverallSnapshotsRequest {
    return new GetOverallSnapshotsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOverallSnapshotsRequest {
    return new GetOverallSnapshotsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOverallSnapshotsRequest {
    return new GetOverallSnapshotsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOverallSnapshotsRequest | PlainMessage<GetOverallSnapshotsRequest> | undefined, b: GetOverallSnapshotsRequest | PlainMessage<GetOverallSnapshotsRequest> | undefined): boolean {
    return proto3.util.equals(GetOverallSnapshotsRequest, a, b);
  }
}

/**
 * @generated from message fijoy.v1.AccountSnapshot
 */
export class AccountSnapshot extends Message<AccountSnapshot> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  /**
   * @generated from field: google.protobuf.Timestamp datehour = 3;
   */
  datehour?: Timestamp;

  /**
   * @generated from field: string balance = 4;
   */
  balance = "";

  constructor(data?: PartialMessage<AccountSnapshot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.AccountSnapshot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "datehour", kind: "message", T: Timestamp },
    { no: 4, name: "balance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountSnapshot {
    return new AccountSnapshot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountSnapshot {
    return new AccountSnapshot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountSnapshot {
    return new AccountSnapshot().fromJsonString(jsonString, options);
  }

  static equals(a: AccountSnapshot | PlainMessage<AccountSnapshot> | undefined, b: AccountSnapshot | PlainMessage<AccountSnapshot> | undefined): boolean {
    return proto3.util.equals(AccountSnapshot, a, b);
  }
}

/**
 * @generated from message fijoy.v1.AccountSnapshotList
 */
export class AccountSnapshotList extends Message<AccountSnapshotList> {
  /**
   * @generated from field: repeated fijoy.v1.AccountSnapshot items = 1;
   */
  items: AccountSnapshot[] = [];

  constructor(data?: PartialMessage<AccountSnapshotList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.AccountSnapshotList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "items", kind: "message", T: AccountSnapshot, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountSnapshotList {
    return new AccountSnapshotList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountSnapshotList {
    return new AccountSnapshotList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountSnapshotList {
    return new AccountSnapshotList().fromJsonString(jsonString, options);
  }

  static equals(a: AccountSnapshotList | PlainMessage<AccountSnapshotList> | undefined, b: AccountSnapshotList | PlainMessage<AccountSnapshotList> | undefined): boolean {
    return proto3.util.equals(AccountSnapshotList, a, b);
  }
}

/**
 * @generated from message fijoy.v1.GetAccountSnapshotsRequest
 */
export class GetAccountSnapshotsRequest extends Message<GetAccountSnapshotsRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: google.protobuf.Timestamp from_datehour = 2;
   */
  fromDatehour?: Timestamp;

  /**
   * inclusive
   *
   * @generated from field: google.protobuf.Timestamp to_datehour = 3;
   */
  toDatehour?: Timestamp;

  constructor(data?: PartialMessage<GetAccountSnapshotsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "fijoy.v1.GetAccountSnapshotsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from_datehour", kind: "message", T: Timestamp },
    { no: 3, name: "to_datehour", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountSnapshotsRequest {
    return new GetAccountSnapshotsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountSnapshotsRequest {
    return new GetAccountSnapshotsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountSnapshotsRequest {
    return new GetAccountSnapshotsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAccountSnapshotsRequest | PlainMessage<GetAccountSnapshotsRequest> | undefined, b: GetAccountSnapshotsRequest | PlainMessage<GetAccountSnapshotsRequest> | undefined): boolean {
    return proto3.util.equals(GetAccountSnapshotsRequest, a, b);
  }
}

