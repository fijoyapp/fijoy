// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: fijoy/v1/snapshot.proto

package fijoyv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OverallSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProfileId  string                 `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Datehour   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=datehour,proto3" json:"datehour,omitempty"`
	Liquidity  string                 `protobuf:"bytes,4,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Investment string                 `protobuf:"bytes,5,opt,name=investment,proto3" json:"investment,omitempty"`
	Property   string                 `protobuf:"bytes,6,opt,name=property,proto3" json:"property,omitempty"`
	Receivable string                 `protobuf:"bytes,7,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Liability  string                 `protobuf:"bytes,8,opt,name=liability,proto3" json:"liability,omitempty"`
}

func (x *OverallSnapshot) Reset() {
	*x = OverallSnapshot{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverallSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverallSnapshot) ProtoMessage() {}

func (x *OverallSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverallSnapshot.ProtoReflect.Descriptor instead.
func (*OverallSnapshot) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *OverallSnapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OverallSnapshot) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *OverallSnapshot) GetDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.Datehour
	}
	return nil
}

func (x *OverallSnapshot) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *OverallSnapshot) GetInvestment() string {
	if x != nil {
		return x.Investment
	}
	return ""
}

func (x *OverallSnapshot) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *OverallSnapshot) GetReceivable() string {
	if x != nil {
		return x.Receivable
	}
	return ""
}

func (x *OverallSnapshot) GetLiability() string {
	if x != nil {
		return x.Liability
	}
	return ""
}

type OverallSnapshotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*OverallSnapshot `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OverallSnapshotList) Reset() {
	*x = OverallSnapshotList{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverallSnapshotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverallSnapshotList) ProtoMessage() {}

func (x *OverallSnapshotList) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverallSnapshotList.ProtoReflect.Descriptor instead.
func (*OverallSnapshotList) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *OverallSnapshotList) GetItems() []*OverallSnapshot {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetOverallSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDatehour *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from_datehour,json=fromDatehour,proto3" json:"from_datehour,omitempty"`
	// inclusive
	ToDatehour *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to_datehour,json=toDatehour,proto3" json:"to_datehour,omitempty"`
}

func (x *GetOverallSnapshotsRequest) Reset() {
	*x = GetOverallSnapshotsRequest{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverallSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverallSnapshotsRequest) ProtoMessage() {}

func (x *GetOverallSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverallSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*GetOverallSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *GetOverallSnapshotsRequest) GetFromDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDatehour
	}
	return nil
}

func (x *GetOverallSnapshotsRequest) GetToDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDatehour
	}
	return nil
}

type AccountSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Datehour  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=datehour,proto3" json:"datehour,omitempty"`
	Balance   string                 `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *AccountSnapshot) Reset() {
	*x = AccountSnapshot{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSnapshot) ProtoMessage() {}

func (x *AccountSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSnapshot.ProtoReflect.Descriptor instead.
func (*AccountSnapshot) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{3}
}

func (x *AccountSnapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountSnapshot) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountSnapshot) GetDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.Datehour
	}
	return nil
}

func (x *AccountSnapshot) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type AccountSnapshotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AccountSnapshot `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AccountSnapshotList) Reset() {
	*x = AccountSnapshotList{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSnapshotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSnapshotList) ProtoMessage() {}

func (x *AccountSnapshotList) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSnapshotList.ProtoReflect.Descriptor instead.
func (*AccountSnapshotList) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{4}
}

func (x *AccountSnapshotList) GetItems() []*AccountSnapshot {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetAccountSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FromDatehour *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from_datehour,json=fromDatehour,proto3" json:"from_datehour,omitempty"`
	// inclusive
	ToDatehour *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to_datehour,json=toDatehour,proto3" json:"to_datehour,omitempty"`
}

func (x *GetAccountSnapshotsRequest) Reset() {
	*x = GetAccountSnapshotsRequest{}
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountSnapshotsRequest) ProtoMessage() {}

func (x *GetAccountSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fijoy_v1_snapshot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_fijoy_v1_snapshot_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountSnapshotsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetAccountSnapshotsRequest) GetFromDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDatehour
	}
	return nil
}

func (x *GetAccountSnapshotsRequest) GetToDatehour() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDatehour
	}
	return nil
}

var File_fijoy_v1_snapshot_proto protoreflect.FileDescriptor

var file_fijoy_v1_snapshot_proto_rawDesc = []byte{
	0x0a, 0x17, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x69, 0x6a, 0x6f, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2,
	0x02, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x68,
	0x6f, 0x75, 0x72, 0x12, 0x24, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x09, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x4e, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x6a, 0x6f,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x68,
	0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x74,
	0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72,
	0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0a, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x68, 0x6f, 0x75, 0x72, 0x32, 0xd3, 0x01, 0x0a,
	0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x03, 0x90, 0x02,
	0x01, 0x12, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x66, 0x69, 0x6a, 0x6f, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x03, 0x90,
	0x02, 0x01, 0x42, 0x7c, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2e,
	0x76, 0x31, 0x42, 0x0d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x1c, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x69, 0x6a, 0x6f, 0x79, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x46, 0x69, 0x6a, 0x6f, 0x79, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x08, 0x46, 0x69, 0x6a, 0x6f, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14,
	0x46, 0x69, 0x6a, 0x6f, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x46, 0x69, 0x6a, 0x6f, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fijoy_v1_snapshot_proto_rawDescOnce sync.Once
	file_fijoy_v1_snapshot_proto_rawDescData = file_fijoy_v1_snapshot_proto_rawDesc
)

func file_fijoy_v1_snapshot_proto_rawDescGZIP() []byte {
	file_fijoy_v1_snapshot_proto_rawDescOnce.Do(func() {
		file_fijoy_v1_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_fijoy_v1_snapshot_proto_rawDescData)
	})
	return file_fijoy_v1_snapshot_proto_rawDescData
}

var file_fijoy_v1_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_fijoy_v1_snapshot_proto_goTypes = []any{
	(*OverallSnapshot)(nil),            // 0: fijoy.v1.OverallSnapshot
	(*OverallSnapshotList)(nil),        // 1: fijoy.v1.OverallSnapshotList
	(*GetOverallSnapshotsRequest)(nil), // 2: fijoy.v1.GetOverallSnapshotsRequest
	(*AccountSnapshot)(nil),            // 3: fijoy.v1.AccountSnapshot
	(*AccountSnapshotList)(nil),        // 4: fijoy.v1.AccountSnapshotList
	(*GetAccountSnapshotsRequest)(nil), // 5: fijoy.v1.GetAccountSnapshotsRequest
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
}
var file_fijoy_v1_snapshot_proto_depIdxs = []int32{
	6,  // 0: fijoy.v1.OverallSnapshot.datehour:type_name -> google.protobuf.Timestamp
	0,  // 1: fijoy.v1.OverallSnapshotList.items:type_name -> fijoy.v1.OverallSnapshot
	6,  // 2: fijoy.v1.GetOverallSnapshotsRequest.from_datehour:type_name -> google.protobuf.Timestamp
	6,  // 3: fijoy.v1.GetOverallSnapshotsRequest.to_datehour:type_name -> google.protobuf.Timestamp
	6,  // 4: fijoy.v1.AccountSnapshot.datehour:type_name -> google.protobuf.Timestamp
	3,  // 5: fijoy.v1.AccountSnapshotList.items:type_name -> fijoy.v1.AccountSnapshot
	6,  // 6: fijoy.v1.GetAccountSnapshotsRequest.from_datehour:type_name -> google.protobuf.Timestamp
	6,  // 7: fijoy.v1.GetAccountSnapshotsRequest.to_datehour:type_name -> google.protobuf.Timestamp
	2,  // 8: fijoy.v1.SnapshotService.GetOverallSnapshots:input_type -> fijoy.v1.GetOverallSnapshotsRequest
	5,  // 9: fijoy.v1.SnapshotService.GetAccountSnapshots:input_type -> fijoy.v1.GetAccountSnapshotsRequest
	1,  // 10: fijoy.v1.SnapshotService.GetOverallSnapshots:output_type -> fijoy.v1.OverallSnapshotList
	4,  // 11: fijoy.v1.SnapshotService.GetAccountSnapshots:output_type -> fijoy.v1.AccountSnapshotList
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_fijoy_v1_snapshot_proto_init() }
func file_fijoy_v1_snapshot_proto_init() {
	if File_fijoy_v1_snapshot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fijoy_v1_snapshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fijoy_v1_snapshot_proto_goTypes,
		DependencyIndexes: file_fijoy_v1_snapshot_proto_depIdxs,
		MessageInfos:      file_fijoy_v1_snapshot_proto_msgTypes,
	}.Build()
	File_fijoy_v1_snapshot_proto = out.File
	file_fijoy_v1_snapshot_proto_rawDesc = nil
	file_fijoy_v1_snapshot_proto_goTypes = nil
	file_fijoy_v1_snapshot_proto_depIdxs = nil
}
