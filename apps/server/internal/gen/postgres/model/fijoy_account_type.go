//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type FijoyAccountType string

const (
	FijoyAccountType_Liquidity  FijoyAccountType = "liquidity"
	FijoyAccountType_Investment FijoyAccountType = "investment"
	FijoyAccountType_Property   FijoyAccountType = "property"
	FijoyAccountType_Receivable FijoyAccountType = "receivable"
	FijoyAccountType_Liability  FijoyAccountType = "liability"
)

func (e *FijoyAccountType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "liquidity":
		*e = FijoyAccountType_Liquidity
	case "investment":
		*e = FijoyAccountType_Investment
	case "property":
		*e = FijoyAccountType_Property
	case "receivable":
		*e = FijoyAccountType_Receivable
	case "liability":
		*e = FijoyAccountType_Liability
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for FijoyAccountType enum")
	}

	return nil
}

func (e FijoyAccountType) String() string {
	return string(e)
}
