//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyProfile = newFijoyProfileTable("public", "fijoy_profile", "")

type fijoyProfileTable struct {
	postgres.Table

	// Columns
	ID                  postgres.ColumnString
	UserID              postgres.ColumnString
	CreatedAt           postgres.ColumnTimestampz
	PrimaryCurrency     postgres.ColumnString
	SupportedCurrencies postgres.ColumnString
	Locale              postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyProfileTable struct {
	fijoyProfileTable

	EXCLUDED fijoyProfileTable
}

// AS creates new FijoyProfileTable with assigned alias
func (a FijoyProfileTable) AS(alias string) *FijoyProfileTable {
	return newFijoyProfileTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyProfileTable with assigned schema name
func (a FijoyProfileTable) FromSchema(schemaName string) *FijoyProfileTable {
	return newFijoyProfileTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyProfileTable with assigned table prefix
func (a FijoyProfileTable) WithPrefix(prefix string) *FijoyProfileTable {
	return newFijoyProfileTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyProfileTable with assigned table suffix
func (a FijoyProfileTable) WithSuffix(suffix string) *FijoyProfileTable {
	return newFijoyProfileTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyProfileTable(schemaName, tableName, alias string) *FijoyProfileTable {
	return &FijoyProfileTable{
		fijoyProfileTable: newFijoyProfileTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newFijoyProfileTableImpl("", "excluded", ""),
	}
}

func newFijoyProfileTableImpl(schemaName, tableName, alias string) fijoyProfileTable {
	var (
		IDColumn                  = postgres.StringColumn("id")
		UserIDColumn              = postgres.StringColumn("user_id")
		CreatedAtColumn           = postgres.TimestampzColumn("created_at")
		PrimaryCurrencyColumn     = postgres.StringColumn("primary_currency")
		SupportedCurrenciesColumn = postgres.StringColumn("supported_currencies")
		LocaleColumn              = postgres.StringColumn("locale")
		allColumns                = postgres.ColumnList{IDColumn, UserIDColumn, CreatedAtColumn, PrimaryCurrencyColumn, SupportedCurrenciesColumn, LocaleColumn}
		mutableColumns            = postgres.ColumnList{UserIDColumn, CreatedAtColumn, PrimaryCurrencyColumn, SupportedCurrenciesColumn, LocaleColumn}
	)

	return fijoyProfileTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                  IDColumn,
		UserID:              UserIDColumn,
		CreatedAt:           CreatedAtColumn,
		PrimaryCurrency:     PrimaryCurrencyColumn,
		SupportedCurrencies: SupportedCurrenciesColumn,
		Locale:              LocaleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
