//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyAccountSnapshot = newFijoyAccountSnapshotTable("public", "fijoy_account_snapshot", "")

type fijoyAccountSnapshotTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	AccountID postgres.ColumnString
	Datehour  postgres.ColumnTimestampz
	Balance   postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyAccountSnapshotTable struct {
	fijoyAccountSnapshotTable

	EXCLUDED fijoyAccountSnapshotTable
}

// AS creates new FijoyAccountSnapshotTable with assigned alias
func (a FijoyAccountSnapshotTable) AS(alias string) *FijoyAccountSnapshotTable {
	return newFijoyAccountSnapshotTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyAccountSnapshotTable with assigned schema name
func (a FijoyAccountSnapshotTable) FromSchema(schemaName string) *FijoyAccountSnapshotTable {
	return newFijoyAccountSnapshotTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyAccountSnapshotTable with assigned table prefix
func (a FijoyAccountSnapshotTable) WithPrefix(prefix string) *FijoyAccountSnapshotTable {
	return newFijoyAccountSnapshotTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyAccountSnapshotTable with assigned table suffix
func (a FijoyAccountSnapshotTable) WithSuffix(suffix string) *FijoyAccountSnapshotTable {
	return newFijoyAccountSnapshotTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyAccountSnapshotTable(schemaName, tableName, alias string) *FijoyAccountSnapshotTable {
	return &FijoyAccountSnapshotTable{
		fijoyAccountSnapshotTable: newFijoyAccountSnapshotTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newFijoyAccountSnapshotTableImpl("", "excluded", ""),
	}
}

func newFijoyAccountSnapshotTableImpl(schemaName, tableName, alias string) fijoyAccountSnapshotTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		AccountIDColumn = postgres.StringColumn("account_id")
		DatehourColumn  = postgres.TimestampzColumn("datehour")
		BalanceColumn   = postgres.FloatColumn("balance")
		allColumns      = postgres.ColumnList{IDColumn, AccountIDColumn, DatehourColumn, BalanceColumn}
		mutableColumns  = postgres.ColumnList{AccountIDColumn, DatehourColumn, BalanceColumn}
	)

	return fijoyAccountSnapshotTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		AccountID: AccountIDColumn,
		Datehour:  DatehourColumn,
		Balance:   BalanceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
