//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyTransaction = newFijoyTransactionTable("public", "fijoy_transaction", "")

type fijoyTransactionTable struct {
	postgres.Table

	// Columns
	ID              postgres.ColumnString
	ProfileID       postgres.ColumnString
	AccountID       postgres.ColumnString
	TransactionType postgres.ColumnString
	Amount          postgres.ColumnFloat
	Currency        postgres.ColumnString
	Datetime        postgres.ColumnTimestampz
	Note            postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyTransactionTable struct {
	fijoyTransactionTable

	EXCLUDED fijoyTransactionTable
}

// AS creates new FijoyTransactionTable with assigned alias
func (a FijoyTransactionTable) AS(alias string) *FijoyTransactionTable {
	return newFijoyTransactionTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyTransactionTable with assigned schema name
func (a FijoyTransactionTable) FromSchema(schemaName string) *FijoyTransactionTable {
	return newFijoyTransactionTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyTransactionTable with assigned table prefix
func (a FijoyTransactionTable) WithPrefix(prefix string) *FijoyTransactionTable {
	return newFijoyTransactionTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyTransactionTable with assigned table suffix
func (a FijoyTransactionTable) WithSuffix(suffix string) *FijoyTransactionTable {
	return newFijoyTransactionTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyTransactionTable(schemaName, tableName, alias string) *FijoyTransactionTable {
	return &FijoyTransactionTable{
		fijoyTransactionTable: newFijoyTransactionTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newFijoyTransactionTableImpl("", "excluded", ""),
	}
}

func newFijoyTransactionTableImpl(schemaName, tableName, alias string) fijoyTransactionTable {
	var (
		IDColumn              = postgres.StringColumn("id")
		ProfileIDColumn       = postgres.StringColumn("profile_id")
		AccountIDColumn       = postgres.StringColumn("account_id")
		TransactionTypeColumn = postgres.StringColumn("transaction_type")
		AmountColumn          = postgres.FloatColumn("amount")
		CurrencyColumn        = postgres.StringColumn("currency")
		DatetimeColumn        = postgres.TimestampzColumn("datetime")
		NoteColumn            = postgres.StringColumn("note")
		allColumns            = postgres.ColumnList{IDColumn, ProfileIDColumn, AccountIDColumn, TransactionTypeColumn, AmountColumn, CurrencyColumn, DatetimeColumn, NoteColumn}
		mutableColumns        = postgres.ColumnList{ProfileIDColumn, AccountIDColumn, TransactionTypeColumn, AmountColumn, CurrencyColumn, DatetimeColumn, NoteColumn}
	)

	return fijoyTransactionTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		ProfileID:       ProfileIDColumn,
		AccountID:       AccountIDColumn,
		TransactionType: TransactionTypeColumn,
		Amount:          AmountColumn,
		Currency:        CurrencyColumn,
		Datetime:        DatetimeColumn,
		Note:            NoteColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
