extend type Query {
  profile: Profile!
  user: User!
  currencies: [Currency!]!

  assetInfo(symbol: String!): AssetInfo
  fxRate(fromCurrency: String!, toCurrency: String!): FXRate
}

type AssetInfo {
  symbol: String!
  name: String!
  exchange: String!
  currency: String!
  currentPrice: String!
}

type FXRate {
  rate: String!
}

type Currency {
  code: String!
  locale: String!
}

input CreateTransactionWithTransactionEntriesInput {
  note: String
  datetime: Time
  transactionEntries: [CreateTransactionEntryInput!]!
}

type CreateAccountResponse {
  accountEdge: AccountEdge!
  transactionEdge: TransactionEdge!
}

type RefreshAccountsResponse {
  accounts: [Account!]!
  transactions: [Transaction!]!
}

type Mutation {
  createProfile(input: CreateProfileInput!): Profile!
  updateProfile(id: ID!, input: UpdateProfileInput!): Profile!

  createAccount(input: CreateAccountInput!): CreateAccountResponse!
  # updateAccount(id: ID!, input: UpdateAccountInput!): Account!

  createTransactionWithTransactionEntries(
    input: CreateTransactionWithTransactionEntriesInput!
  ): Transaction!
  # updateTransaction(id: ID!, input: UpdateTransactionInput!): Transaction!

  createTransactionEntry(input: CreateTransactionEntryInput!): TransactionEntry!

  refreshAccounts: RefreshAccountsResponse!
}
