// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// AccountSnapshotsColumns holds the columns for the "account_snapshots" table.
	AccountSnapshotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AccountSnapshotsTable holds the schema information for the "account_snapshots" table.
	AccountSnapshotsTable = &schema.Table{
		Name:       "account_snapshots",
		Columns:    AccountSnapshotsColumns,
		PrimaryKey: []*schema.Column{AccountSnapshotsColumns[0]},
	}
	// OverallSnapshotsColumns holds the columns for the "overall_snapshots" table.
	OverallSnapshotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// OverallSnapshotsTable holds the schema information for the "overall_snapshots" table.
	OverallSnapshotsTable = &schema.Table{
		Name:       "overall_snapshots",
		Columns:    OverallSnapshotsColumns,
		PrimaryKey: []*schema.Column{OverallSnapshotsColumns[0]},
	}
	// ProfilesColumns holds the columns for the "profiles" table.
	ProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProfilesTable holds the schema information for the "profiles" table.
	ProfilesTable = &schema.Table{
		Name:       "profiles",
		Columns:    ProfilesColumns,
		PrimaryKey: []*schema.Column{ProfilesColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserKeysColumns holds the columns for the "user_keys" table.
	UserKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_user_key", Type: field.TypeInt, Nullable: true},
	}
	// UserKeysTable holds the schema information for the "user_keys" table.
	UserKeysTable = &schema.Table{
		Name:       "user_keys",
		Columns:    UserKeysColumns,
		PrimaryKey: []*schema.Column{UserKeysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_keys_users_user_key",
				Columns:    []*schema.Column{UserKeysColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		AccountSnapshotsTable,
		OverallSnapshotsTable,
		ProfilesTable,
		TransactionsTable,
		UsersTable,
		UserKeysTable,
	}
)

func init() {
	UserKeysTable.ForeignKeys[0].RefTable = UsersTable
}
