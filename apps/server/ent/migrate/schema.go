// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "institution", Type: field.TypeString},
		{Name: "account_type", Type: field.TypeEnum, Enums: []string{"liquidity", "investment", "property", "receivable", "liability"}},
		{Name: "investment_type", Type: field.TypeEnum, Enums: []string{"non_investment", "taxable", "rrsp", "tfsa", "fhsa"}},
		{Name: "currency_code", Type: field.TypeString},
		{Name: "ticker", Type: field.TypeString},
		{Name: "ticker_type", Type: field.TypeEnum, Enums: []string{"currency", "stock", "crypto"}},
		{Name: "amount", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "value", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(18,10)", "postgres": "numeric(18,10)"}},
		{Name: "balance", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "archived", Type: field.TypeBool, Default: false},
		{Name: "profile_accounts", Type: field.TypeInt},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_profiles_accounts",
				Columns:    []*schema.Column{AccountsColumns[14]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "category_type", Type: field.TypeEnum, Enums: []string{"expense", "income", "transfer", "sync", "init"}},
		{Name: "profile_categories", Type: field.TypeInt},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "categories_profiles_categories",
				Columns:    []*schema.Column{CategoriesColumns[5]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProfilesColumns holds the columns for the "profiles" table.
	ProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "locale", Type: field.TypeString},
		{Name: "currencies", Type: field.TypeJSON},
		{Name: "net_worth_goal", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "user_profiles", Type: field.TypeInt},
	}
	// ProfilesTable holds the schema information for the "profiles" table.
	ProfilesTable = &schema.Table{
		Name:       "profiles",
		Columns:    ProfilesColumns,
		PrimaryKey: []*schema.Column{ProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "profiles_users_profiles",
				Columns:    []*schema.Column{ProfilesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SnapshotsColumns holds the columns for the "snapshots" table.
	SnapshotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "profile_snapshots", Type: field.TypeInt},
	}
	// SnapshotsTable holds the schema information for the "snapshots" table.
	SnapshotsTable = &schema.Table{
		Name:       "snapshots",
		Columns:    SnapshotsColumns,
		PrimaryKey: []*schema.Column{SnapshotsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "snapshots_profiles_snapshots",
				Columns:    []*schema.Column{SnapshotsColumns[4]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SnapshotAccountsColumns holds the columns for the "snapshot_accounts" table.
	SnapshotAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "value", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(18,10)", "postgres": "numeric(18,10)"}},
		{Name: "balance", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "account_snapshot_accounts", Type: field.TypeInt},
		{Name: "snapshot_snapshot_accounts", Type: field.TypeInt},
	}
	// SnapshotAccountsTable holds the schema information for the "snapshot_accounts" table.
	SnapshotAccountsTable = &schema.Table{
		Name:       "snapshot_accounts",
		Columns:    SnapshotAccountsColumns,
		PrimaryKey: []*schema.Column{SnapshotAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "snapshot_accounts_accounts_snapshot_accounts",
				Columns:    []*schema.Column{SnapshotAccountsColumns[6]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "snapshot_accounts_snapshots_snapshot_accounts",
				Columns:    []*schema.Column{SnapshotAccountsColumns[7]},
				RefColumns: []*schema.Column{SnapshotsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SnapshotFxRatesColumns holds the columns for the "snapshot_fx_rates" table.
	SnapshotFxRatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "from_currency", Type: field.TypeString, Size: 2147483647},
		{Name: "to_currency", Type: field.TypeString, Size: 2147483647},
		{Name: "fx_rate", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(18,10)", "postgres": "numeric(18,10)"}},
		{Name: "snapshot_snapshot_fx_rates", Type: field.TypeInt},
	}
	// SnapshotFxRatesTable holds the schema information for the "snapshot_fx_rates" table.
	SnapshotFxRatesTable = &schema.Table{
		Name:       "snapshot_fx_rates",
		Columns:    SnapshotFxRatesColumns,
		PrimaryKey: []*schema.Column{SnapshotFxRatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "snapshot_fx_rates_snapshots_snapshot_fx_rates",
				Columns:    []*schema.Column{SnapshotFxRatesColumns[6]},
				RefColumns: []*schema.Column{SnapshotsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category_transactions", Type: field.TypeInt},
		{Name: "profile_transactions", Type: field.TypeInt},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_categories_transactions",
				Columns:    []*schema.Column{TransactionsColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "transactions_profiles_transactions",
				Columns:    []*schema.Column{TransactionsColumns[5]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TransactionEntriesColumns holds the columns for the "transaction_entries" table.
	TransactionEntriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "amount", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "value", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(18,10)", "postgres": "numeric(18,10)"}},
		{Name: "balance", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(36,18)", "postgres": "numeric(36,18)"}},
		{Name: "account_transaction_entries", Type: field.TypeInt},
		{Name: "transaction_transaction_entries", Type: field.TypeInt},
	}
	// TransactionEntriesTable holds the schema information for the "transaction_entries" table.
	TransactionEntriesTable = &schema.Table{
		Name:       "transaction_entries",
		Columns:    TransactionEntriesColumns,
		PrimaryKey: []*schema.Column{TransactionEntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_entries_accounts_transaction_entries",
				Columns:    []*schema.Column{TransactionEntriesColumns[7]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "transaction_entries_transactions_transaction_entries",
				Columns:    []*schema.Column{TransactionEntriesColumns[8]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserKeysColumns holds the columns for the "user_keys" table.
	UserKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "key", Type: field.TypeString},
		{Name: "hashed_password", Type: field.TypeString, Nullable: true},
		{Name: "user_user_keys", Type: field.TypeInt},
	}
	// UserKeysTable holds the schema information for the "user_keys" table.
	UserKeysTable = &schema.Table{
		Name:       "user_keys",
		Columns:    UserKeysColumns,
		PrimaryKey: []*schema.Column{UserKeysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_keys_users_user_keys",
				Columns:    []*schema.Column{UserKeysColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		CategoriesTable,
		ProfilesTable,
		SnapshotsTable,
		SnapshotAccountsTable,
		SnapshotFxRatesTable,
		TransactionsTable,
		TransactionEntriesTable,
		UsersTable,
		UserKeysTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = ProfilesTable
	AccountsTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(0),
	}
	CategoriesTable.ForeignKeys[0].RefTable = ProfilesTable
	CategoriesTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(38654705664),
	}
	ProfilesTable.ForeignKeys[0].RefTable = UsersTable
	ProfilesTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(4294967296),
	}
	SnapshotsTable.ForeignKeys[0].RefTable = ProfilesTable
	SnapshotsTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(25769803776),
	}
	SnapshotAccountsTable.ForeignKeys[0].RefTable = AccountsTable
	SnapshotAccountsTable.ForeignKeys[1].RefTable = SnapshotsTable
	SnapshotAccountsTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(30064771072),
	}
	SnapshotFxRatesTable.ForeignKeys[0].RefTable = SnapshotsTable
	SnapshotFxRatesTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(34359738368),
	}
	TransactionsTable.ForeignKeys[0].RefTable = CategoriesTable
	TransactionsTable.ForeignKeys[1].RefTable = ProfilesTable
	TransactionsTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(8589934592),
	}
	TransactionEntriesTable.ForeignKeys[0].RefTable = AccountsTable
	TransactionEntriesTable.ForeignKeys[1].RefTable = TransactionsTable
	TransactionEntriesTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(12884901888),
	}
	UsersTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(17179869184),
	}
	UserKeysTable.ForeignKeys[0].RefTable = UsersTable
	UserKeysTable.Annotation = &entsql.Annotation{
		IncrementStart: func(i int) *int { return &i }(21474836480),
	}
}
