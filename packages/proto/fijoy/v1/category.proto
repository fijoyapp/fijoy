syntax = "proto3";

package fijoy.v1;

import "buf/validate/validate.proto";
import "fijoy/v1/transaction.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message Category {
  string id = 1 [(buf.validate.field).string.min_len = 1];
  string workspace_id = 2 [(buf.validate.field).string.min_len = 1];
  string name = 3 [(buf.validate.field).string.min_len = 1];
  string position = 4 [(buf.validate.field).string.min_len = 1];
  fijoy.v1.TransactionType category_type = 5 [(buf.validate.field).required = true];
}

message Categories {
  repeated Category categories = 1;
}

message CreateCategoriesRequest {
  repeated string categories = 1 [
    (buf.validate.field).repeated.unique = true,
    (buf.validate.field).repeated.min_items = 1
  ];

  fijoy.v1.TransactionType category_type = 2 [(buf.validate.field).required = true];
}

message UpdateCategoryByIdRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
  string name = 2;
  string beforeId = 3;
  string afterId = 4;
}

message DeleteCategoryByIdRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

service CategoryService {
  rpc CreateCategories(CreateCategoriesRequest) returns (google.protobuf.Empty);

  rpc GetCategories(google.protobuf.Empty) returns (Categories) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  rpc UpdateCategoryById(UpdateCategoryByIdRequest) returns (Category) {}

  rpc DeleteCategoryById(DeleteCategoryByIdRequest) returns (Category) {}
}
